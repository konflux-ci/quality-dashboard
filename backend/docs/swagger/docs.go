// Package swagger GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Source Code",
            "url": "https://github.com/konflux-ci/quality-dashboard"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/konflux-ci/quality-dashboard/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/jira/bugs/e2e": {
            "get": {
                "description": "returns a list of jira issues which contain the label appstudio-e2e-tests-known-issues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jira API Info"
                ],
                "summary": "Jira API Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jira.Issue"
                            }
                        }
                    }
                }
            }
        },
        "/prow/results/get": {
            "get": {
                "description": "returns all prow jobs related to git_organization and repository_name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prow Jobs info"
                ],
                "summary": "Prow Jobs info",
                "parameters": [
                    {
                        "description": "repository name",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prow.GitRepositoryRequest"
                        }
                    },
                    {
                        "description": "git_organization",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prow.GitRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prow/results/latest/get": {
            "get": {
                "description": "returns all prow jobs related to git_organization and repository_name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prow Jobs info"
                ],
                "summary": "Prow Jobs info",
                "parameters": [
                    {
                        "description": "repository name",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prow.GitRepositoryRequest"
                        }
                    },
                    {
                        "description": "git_organization",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prow.GitRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/repositories/create": {
            "post": {
                "description": "returns the Server information as a JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github Repositories API"
                ],
                "summary": "Github repositories info",
                "parameters": [
                    {
                        "description": "repository name",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repositories.GitRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/repositories/delete": {
            "delete": {
                "description": "delete a given repository from a organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github Repositories API"
                ],
                "summary": "Github repositories info",
                "parameters": [
                    {
                        "description": "repository name",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repositories.GitRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/repositories/list": {
            "get": {
                "description": "returns all repository information stored in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github Repositories API"
                ],
                "summary": "Github repositories info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.RepositoryQualityInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/server/info": {
            "get": {
                "description": "returns the Server information as a JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server API"
                ],
                "summary": "API Server info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/version.Version"
                        }
                    }
                }
            }
        },
        "/teams/create": {
            "post": {
                "description": "create a team in quality studio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams API Info"
                ],
                "summary": "Teams API Info",
                "parameters": [
                    {
                        "description": "Body json params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teams.TeamsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Teams"
                        }
                    }
                }
            }
        },
        "/teams/list/all": {
            "get": {
                "description": "returns a list of teams created in quality studio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams API Info"
                ],
                "summary": "Teams API Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Teams"
                            }
                        }
                    }
                }
            }
        },
        "/workflows/get": {
            "get": {
                "description": "return github workflows from a given repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github Workflows API"
                ],
                "summary": "Quality Repositories Workflow",
                "parameters": [
                    {
                        "type": "string",
                        "example": "string",
                        "description": "string example",
                        "name": "repository_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.GithubWorkflows"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.CodeCov": {
            "type": "object",
            "properties": {
                "coverage_percentage": {
                    "description": "CoveragePercentage holds the value of the \"coverage_percentage\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CodeCovQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.CodeCovEdges"
                        }
                    ]
                },
                "git_organization": {
                    "description": "GitOrganization holds the value of the \"git_organization\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "repository_name": {
                    "description": "RepositoryName holds the value of the \"repository_name\" field.",
                    "type": "string"
                }
            }
        },
        "db.CodeCovEdges": {
            "type": "object",
            "properties": {
                "codecov": {
                    "description": "Codecov holds the value of the codecov edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.Repository"
                        }
                    ]
                }
            }
        },
        "db.ProwJobs": {
            "type": "object",
            "properties": {
                "ci_failed": {
                    "description": "CiFailed holds the value of the \"ci_failed\" field.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration holds the value of the \"duration\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProwJobsQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.ProwJobsEdges"
                        }
                    ]
                },
                "failed_count": {
                    "description": "FailedCount holds the value of the \"failed_count\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "job_id": {
                    "description": "JobID holds the value of the \"job_id\" field.",
                    "type": "string"
                },
                "job_name": {
                    "description": "JobName holds the value of the \"job_name\" field.",
                    "type": "string"
                },
                "job_type": {
                    "description": "JobType holds the value of the \"job_type\" field.",
                    "type": "string"
                },
                "job_url": {
                    "description": "JobURL holds the value of the \"job_url\" field.",
                    "type": "string"
                },
                "skipped_count": {
                    "description": "SkippedCount holds the value of the \"skipped_count\" field.",
                    "type": "integer"
                },
                "state": {
                    "description": "State holds the value of the \"state\" field.",
                    "type": "string"
                },
                "tests_count": {
                    "description": "TestsCount holds the value of the \"tests_count\" field.",
                    "type": "integer"
                }
            }
        },
        "db.ProwJobsEdges": {
            "type": "object",
            "properties": {
                "prow_jobs": {
                    "description": "ProwJobs holds the value of the prow_jobs edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.Repository"
                        }
                    ]
                }
            }
        },
        "db.ProwSuites": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProwSuitesQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.ProwSuitesEdges"
                        }
                    ]
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "job_id": {
                    "description": "JobID holds the value of the \"job_id\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "number"
                }
            }
        },
        "db.ProwSuitesEdges": {
            "type": "object",
            "properties": {
                "prow_suites": {
                    "description": "ProwSuites holds the value of the prow_suites edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.Repository"
                        }
                    ]
                }
            }
        },
        "db.Repository": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RepositoryQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.RepositoryEdges"
                        }
                    ]
                },
                "git_organization": {
                    "description": "GitOrganization holds the value of the \"git_organization\" field.",
                    "type": "string"
                },
                "git_url": {
                    "description": "GitURL holds the value of the \"git_url\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "repository_name": {
                    "description": "RepositoryName holds the value of the \"repository_name\" field.",
                    "type": "string"
                }
            }
        },
        "db.RepositoryEdges": {
            "type": "object",
            "properties": {
                "codecov": {
                    "description": "Codecov holds the value of the codecov edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CodeCov"
                    }
                },
                "prow_jobs": {
                    "description": "ProwJobs holds the value of the prow_jobs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.ProwJobs"
                    }
                },
                "prow_suites": {
                    "description": "ProwSuites holds the value of the prow_suites edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.ProwSuites"
                    }
                },
                "repositories": {
                    "description": "Repositories holds the value of the repositories edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.Teams"
                        }
                    ]
                },
                "workflows": {
                    "description": "Workflows holds the value of the workflows edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Workflows"
                    }
                }
            }
        },
        "db.Teams": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TeamsQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.TeamsEdges"
                        }
                    ]
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "team_name": {
                    "description": "TeamName holds the value of the \"team_name\" field.",
                    "type": "string"
                }
            }
        },
        "db.TeamsEdges": {
            "type": "object",
            "properties": {
                "repositories": {
                    "description": "Repositories holds the value of the repositories edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Repository"
                    }
                }
            }
        },
        "db.Workflows": {
            "type": "object",
            "properties": {
                "badge_url": {
                    "description": "BadgeURL holds the value of the \"badge_url\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the WorkflowsQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.WorkflowsEdges"
                        }
                    ]
                },
                "html_url": {
                    "description": "HTMLURL holds the value of the \"html_url\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "job_url": {
                    "description": "JobURL holds the value of the \"job_url\" field.",
                    "type": "string"
                },
                "state": {
                    "description": "State holds the value of the \"state\" field.",
                    "type": "string"
                },
                "workflow_id": {
                    "description": "WorkflowID holds the value of the \"workflow_id\" field.",
                    "type": "string"
                },
                "workflow_name": {
                    "description": "WorkflowName holds the value of the \"workflow_name\" field.",
                    "type": "string"
                }
            }
        },
        "db.WorkflowsEdges": {
            "type": "object",
            "properties": {
                "workflows": {
                    "description": "Workflows holds the value of the workflows edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.Repository"
                        }
                    ]
                }
            }
        },
        "jira.AffectsVersion": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "description": "Unlike other IDs, this is returned as a number",
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "released": {
                    "type": "boolean"
                },
                "self": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userReleaseDate": {
                    "type": "string"
                }
            }
        },
        "jira.Attachment": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jira.User"
                },
                "content": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "jira.AvatarUrls": {
            "type": "object",
            "properties": {
                "16x16": {
                    "type": "string"
                },
                "24x24": {
                    "type": "string"
                },
                "32x32": {
                    "type": "string"
                },
                "48x48": {
                    "type": "string"
                }
            }
        },
        "jira.Changelog": {
            "type": "object",
            "properties": {
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.ChangelogHistory"
                    }
                }
            }
        },
        "jira.ChangelogHistory": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jira.User"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.ChangelogItems"
                    }
                }
            }
        },
        "jira.ChangelogItems": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "fieldtype": {
                    "type": "string"
                },
                "from": {},
                "fromString": {
                    "type": "string"
                },
                "to": {},
                "toString": {
                    "type": "string"
                }
            }
        },
        "jira.Comment": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jira.User"
                },
                "body": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "updateAuthor": {
                    "$ref": "#/definitions/jira.User"
                },
                "updated": {
                    "type": "string"
                },
                "visibility": {
                    "$ref": "#/definitions/jira.CommentVisibility"
                }
            }
        },
        "jira.CommentVisibility": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "jira.Comments": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Comment"
                    }
                }
            }
        },
        "jira.Component": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.EntityProperty": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "jira.Epic": {
            "type": "object",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "jira.FixVersion": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "description": "Unlike other IDs, this is returned as a number",
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "released": {
                    "type": "boolean"
                },
                "self": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userReleaseDate": {
                    "type": "string"
                }
            }
        },
        "jira.Issue": {
            "type": "object",
            "properties": {
                "changelog": {
                    "$ref": "#/definitions/jira.Changelog"
                },
                "expand": {
                    "type": "string"
                },
                "fields": {
                    "$ref": "#/definitions/jira.IssueFields"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "names": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "renderedFields": {
                    "$ref": "#/definitions/jira.IssueRenderedFields"
                },
                "self": {
                    "type": "string"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Transition"
                    }
                }
            }
        },
        "jira.IssueFields": {
            "type": "object",
            "properties": {
                "Creator": {
                    "$ref": "#/definitions/jira.User"
                },
                "aggregateprogress": {
                    "$ref": "#/definitions/jira.Progress"
                },
                "aggregatetimeestimate": {
                    "type": "integer"
                },
                "aggregatetimeoriginalestimate": {
                    "type": "integer"
                },
                "aggregatetimespent": {
                    "type": "integer"
                },
                "assignee": {
                    "$ref": "#/definitions/jira.User"
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Attachment"
                    }
                },
                "comment": {
                    "$ref": "#/definitions/jira.Comments"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Component"
                    }
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duedate": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "epic": {
                    "$ref": "#/definitions/jira.Epic"
                },
                "expand": {
                    "description": "TODO Missing fields\n     * \"workratio\": -1,\n     * \"lastViewed\": null,\n     * \"environment\": null,",
                    "type": "string"
                },
                "fixVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.FixVersion"
                    }
                },
                "issuelinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.IssueLink"
                    }
                },
                "issuetype": {
                    "$ref": "#/definitions/jira.IssueType"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent": {
                    "$ref": "#/definitions/jira.Parent"
                },
                "priority": {
                    "$ref": "#/definitions/jira.Priority"
                },
                "progress": {
                    "$ref": "#/definitions/jira.Progress"
                },
                "project": {
                    "$ref": "#/definitions/jira.Project"
                },
                "reporter": {
                    "$ref": "#/definitions/jira.User"
                },
                "resolution": {
                    "$ref": "#/definitions/jira.Resolution"
                },
                "resolutiondate": {
                    "type": "string"
                },
                "sprint": {
                    "$ref": "#/definitions/jira.Sprint"
                },
                "status": {
                    "$ref": "#/definitions/jira.Status"
                },
                "subtasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Subtasks"
                    }
                },
                "summary": {
                    "type": "string"
                },
                "timeestimate": {
                    "type": "integer"
                },
                "timeoriginalestimate": {
                    "type": "integer"
                },
                "timespent": {
                    "type": "integer"
                },
                "timetracking": {
                    "$ref": "#/definitions/jira.TimeTracking"
                },
                "unknowns": {
                    "$ref": "#/definitions/tcontainer.MarshalMap"
                },
                "updated": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.AffectsVersion"
                    }
                },
                "watches": {
                    "$ref": "#/definitions/jira.Watches"
                },
                "worklog": {
                    "$ref": "#/definitions/jira.Worklog"
                }
            }
        },
        "jira.IssueLink": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/jira.Comment"
                },
                "id": {
                    "type": "string"
                },
                "inwardIssue": {
                    "$ref": "#/definitions/jira.Issue"
                },
                "outwardIssue": {
                    "$ref": "#/definitions/jira.Issue"
                },
                "self": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/jira.IssueLinkType"
                }
            }
        },
        "jira.IssueLinkType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "inward": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outward": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.IssueRenderedFields": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/jira.Comments"
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duedate": {
                    "type": "string"
                },
                "resolutiondate": {
                    "description": "TODO Missing fields\n     * \"aggregatetimespent\": null,\n     * \"workratio\": -1,\n     * \"lastViewed\": null,\n     * \"aggregatetimeoriginalestimate\": null,\n     * \"aggregatetimeestimate\": null,\n     * \"environment\": null,",
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "jira.IssueType": {
            "type": "object",
            "properties": {
                "avatarId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "subtask": {
                    "type": "boolean"
                }
            }
        },
        "jira.Parent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "jira.Priority": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "statusColor": {
                    "type": "string"
                }
            }
        },
        "jira.Progress": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "jira.Project": {
            "type": "object",
            "properties": {
                "assigneeType": {
                    "type": "string"
                },
                "avatarUrls": {
                    "$ref": "#/definitions/jira.AvatarUrls"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.ProjectComponent"
                    }
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expand": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issueTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.IssueType"
                    }
                },
                "key": {
                    "type": "string"
                },
                "lead": {
                    "$ref": "#/definitions/jira.User"
                },
                "name": {
                    "type": "string"
                },
                "projectCategory": {
                    "$ref": "#/definitions/jira.ProjectCategory"
                },
                "roles": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "self": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Version"
                    }
                }
            }
        },
        "jira.ProjectCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.ProjectComponent": {
            "type": "object",
            "properties": {
                "assignee": {
                    "$ref": "#/definitions/jira.User"
                },
                "assigneeType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAssigneeTypeValid": {
                    "type": "boolean"
                },
                "lead": {
                    "$ref": "#/definitions/jira.User"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "realAssignee": {
                    "$ref": "#/definitions/jira.User"
                },
                "realAssigneeType": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.Resolution": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.Sprint": {
            "type": "object",
            "properties": {
                "completeDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "originBoardId": {
                    "type": "integer"
                },
                "self": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "jira.Status": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "statusCategory": {
                    "$ref": "#/definitions/jira.StatusCategory"
                }
            }
        },
        "jira.StatusCategory": {
            "type": "object",
            "properties": {
                "colorName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.Subtasks": {
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/jira.IssueFields"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.TimeTracking": {
            "type": "object",
            "properties": {
                "originalEstimate": {
                    "type": "string"
                },
                "originalEstimateSeconds": {
                    "type": "integer"
                },
                "remainingEstimate": {
                    "type": "string"
                },
                "remainingEstimateSeconds": {
                    "type": "integer"
                },
                "timeSpent": {
                    "type": "string"
                },
                "timeSpentSeconds": {
                    "type": "integer"
                }
            }
        },
        "jira.Transition": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jira.TransitionField"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "to": {
                    "$ref": "#/definitions/jira.Status"
                }
            }
        },
        "jira.TransitionField": {
            "type": "object",
            "properties": {
                "required": {
                    "type": "boolean"
                }
            }
        },
        "jira.User": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "applicationKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "avatarUrls": {
                    "$ref": "#/definitions/jira.AvatarUrls"
                },
                "displayName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            }
        },
        "jira.Version": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "description": "Unlike other IDs, this is returned as a number",
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "released": {
                    "type": "boolean"
                },
                "self": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userReleaseDate": {
                    "type": "string"
                }
            }
        },
        "jira.Watcher": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.Watches": {
            "type": "object",
            "properties": {
                "isWatching": {
                    "type": "boolean"
                },
                "self": {
                    "type": "string"
                },
                "watchCount": {
                    "type": "integer"
                },
                "watchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Watcher"
                    }
                }
            }
        },
        "jira.Worklog": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "type": "integer"
                },
                "startAt": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "worklogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.WorklogRecord"
                    }
                }
            }
        },
        "jira.WorklogRecord": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jira.User"
                },
                "comment": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issueId": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.EntityProperty"
                    }
                },
                "self": {
                    "type": "string"
                },
                "started": {
                    "type": "string"
                },
                "timeSpent": {
                    "type": "string"
                },
                "timeSpentSeconds": {
                    "type": "integer"
                },
                "updateAuthor": {
                    "$ref": "#/definitions/jira.User"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "prow.GitRepositoryRequest": {
            "type": "object",
            "properties": {
                "git_organization": {
                    "type": "string"
                },
                "repository_name": {
                    "type": "string"
                }
            }
        },
        "repositories.GitRepositoryRequest": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "git_organization": {
                    "type": "string"
                },
                "jobs": {
                    "$ref": "#/definitions/repositories.JobSpec"
                },
                "repository_name": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "repositories.GithubActionsSpec": {
            "type": "object",
            "properties": {
                "monitor": {
                    "type": "boolean"
                }
            }
        },
        "repositories.JobSpec": {
            "type": "object",
            "properties": {
                "github_actions": {
                    "$ref": "#/definitions/repositories.GithubActionsSpec"
                },
                "openshift_ci": {
                    "$ref": "#/definitions/repositories.OpenshiftCISpec"
                }
            }
        },
        "repositories.OpenshiftCISpec": {
            "type": "object",
            "properties": {
                "monitor": {
                    "type": "boolean"
                }
            }
        },
        "storage.Coverage": {
            "type": "object",
            "properties": {
                "coverage_percentage": {
                    "type": "number"
                },
                "git_organization": {
                    "type": "string"
                },
                "repository_name": {
                    "description": "RepositoryName identify an github repository",
                    "type": "string"
                }
            }
        },
        "storage.GithubWorkflows": {
            "type": "object",
            "properties": {
                "badge_url": {
                    "type": "string"
                },
                "html_url": {
                    "type": "string"
                },
                "job_url": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "workflow_name": {
                    "description": "RepositoryName identify an github repository",
                    "type": "string"
                }
            }
        },
        "storage.RepositoryQualityInfo": {
            "type": "object",
            "properties": {
                "code_coverage": {
                    "$ref": "#/definitions/storage.Coverage"
                },
                "description": {
                    "type": "string"
                },
                "git_organization": {
                    "type": "string"
                },
                "git_url": {
                    "type": "string"
                },
                "github_actions": {
                    "description": "Coverage",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.GithubWorkflows"
                    }
                },
                "repository_name": {
                    "description": "RepositoryName identify an github repository",
                    "type": "string"
                }
            }
        },
        "tcontainer.MarshalMap": {
            "type": "object",
            "additionalProperties": true
        },
        "teams.TeamsRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "The error message.\nRequired: true",
                    "type": "string"
                },
                "statusCode": {
                    "description": "The error message.\nRequired: false",
                    "type": "integer"
                }
            }
        },
        "types.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "The message.\nRequired: true",
                    "type": "string"
                },
                "statusCode": {
                    "description": "The error message.\nRequired: false",
                    "type": "integer"
                }
            }
        },
        "version.Version": {
            "type": "object",
            "properties": {
                "apiMaturity": {
                    "type": "string"
                },
                "buildDate": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "goArch": {
                    "type": "string"
                },
                "goOs": {
                    "type": "string"
                },
                "goVersion": {
                    "type": "string"
                },
                "serverAPIVersion": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1alpha",
	Host:             "127.0.0.1:9898",
	BasePath:         "/api/quality/",
	Schemes:          []string{"http", "https"},
	Title:            "Quality Studio API",
	Description:      "Go microservice API for Quality Studio Server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
