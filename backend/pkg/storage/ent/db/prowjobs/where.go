// Code generated by ent, DO NOT EDIT.

package prowjobs

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/redhat-appstudio/quality-studio/pkg/storage/ent/db/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldID, id))
}

// JobID applies equality check predicate on the "job_id" field. It's identical to JobIDEQ.
func JobID(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldCreatedAt, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldDuration, v))
}

// TestsCount applies equality check predicate on the "tests_count" field. It's identical to TestsCountEQ.
func TestsCount(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldTestsCount, v))
}

// FailedCount applies equality check predicate on the "failed_count" field. It's identical to FailedCountEQ.
func FailedCount(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldFailedCount, v))
}

// SkippedCount applies equality check predicate on the "skipped_count" field. It's identical to SkippedCountEQ.
func SkippedCount(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldSkippedCount, v))
}

// JobName applies equality check predicate on the "job_name" field. It's identical to JobNameEQ.
func JobName(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobName, v))
}

// JobType applies equality check predicate on the "job_type" field. It's identical to JobTypeEQ.
func JobType(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobType, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldState, v))
}

// JobURL applies equality check predicate on the "job_url" field. It's identical to JobURLEQ.
func JobURL(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobURL, v))
}

// CiFailed applies equality check predicate on the "ci_failed" field. It's identical to CiFailedEQ.
func CiFailed(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldCiFailed, v))
}

// ExternalServicesImpact applies equality check predicate on the "external_services_impact" field. It's identical to ExternalServicesImpactEQ.
func ExternalServicesImpact(v bool) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldExternalServicesImpact, v))
}

// E2eFailedTestMessages applies equality check predicate on the "e2e_failed_test_messages" field. It's identical to E2eFailedTestMessagesEQ.
func E2eFailedTestMessages(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldE2eFailedTestMessages, v))
}

// SuitesXMLURL applies equality check predicate on the "suites_xml_url" field. It's identical to SuitesXMLURLEQ.
func SuitesXMLURL(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldSuitesXMLURL, v))
}

// BuildErrorLogs applies equality check predicate on the "build_error_logs" field. It's identical to BuildErrorLogsEQ.
func BuildErrorLogs(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldBuildErrorLogs, v))
}

// JobIDEQ applies the EQ predicate on the "job_id" field.
func JobIDEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobID, v))
}

// JobIDNEQ applies the NEQ predicate on the "job_id" field.
func JobIDNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldJobID, v))
}

// JobIDIn applies the In predicate on the "job_id" field.
func JobIDIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldJobID, vs...))
}

// JobIDNotIn applies the NotIn predicate on the "job_id" field.
func JobIDNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldJobID, vs...))
}

// JobIDGT applies the GT predicate on the "job_id" field.
func JobIDGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldJobID, v))
}

// JobIDGTE applies the GTE predicate on the "job_id" field.
func JobIDGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldJobID, v))
}

// JobIDLT applies the LT predicate on the "job_id" field.
func JobIDLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldJobID, v))
}

// JobIDLTE applies the LTE predicate on the "job_id" field.
func JobIDLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldJobID, v))
}

// JobIDContains applies the Contains predicate on the "job_id" field.
func JobIDContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldJobID, v))
}

// JobIDHasPrefix applies the HasPrefix predicate on the "job_id" field.
func JobIDHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldJobID, v))
}

// JobIDHasSuffix applies the HasSuffix predicate on the "job_id" field.
func JobIDHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldJobID, v))
}

// JobIDEqualFold applies the EqualFold predicate on the "job_id" field.
func JobIDEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldJobID, v))
}

// JobIDContainsFold applies the ContainsFold predicate on the "job_id" field.
func JobIDContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldJobID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldCreatedAt, v))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v float64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldDuration, v))
}

// TestsCountEQ applies the EQ predicate on the "tests_count" field.
func TestsCountEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldTestsCount, v))
}

// TestsCountNEQ applies the NEQ predicate on the "tests_count" field.
func TestsCountNEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldTestsCount, v))
}

// TestsCountIn applies the In predicate on the "tests_count" field.
func TestsCountIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldTestsCount, vs...))
}

// TestsCountNotIn applies the NotIn predicate on the "tests_count" field.
func TestsCountNotIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldTestsCount, vs...))
}

// TestsCountGT applies the GT predicate on the "tests_count" field.
func TestsCountGT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldTestsCount, v))
}

// TestsCountGTE applies the GTE predicate on the "tests_count" field.
func TestsCountGTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldTestsCount, v))
}

// TestsCountLT applies the LT predicate on the "tests_count" field.
func TestsCountLT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldTestsCount, v))
}

// TestsCountLTE applies the LTE predicate on the "tests_count" field.
func TestsCountLTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldTestsCount, v))
}

// TestsCountIsNil applies the IsNil predicate on the "tests_count" field.
func TestsCountIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldTestsCount))
}

// TestsCountNotNil applies the NotNil predicate on the "tests_count" field.
func TestsCountNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldTestsCount))
}

// FailedCountEQ applies the EQ predicate on the "failed_count" field.
func FailedCountEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldFailedCount, v))
}

// FailedCountNEQ applies the NEQ predicate on the "failed_count" field.
func FailedCountNEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldFailedCount, v))
}

// FailedCountIn applies the In predicate on the "failed_count" field.
func FailedCountIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldFailedCount, vs...))
}

// FailedCountNotIn applies the NotIn predicate on the "failed_count" field.
func FailedCountNotIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldFailedCount, vs...))
}

// FailedCountGT applies the GT predicate on the "failed_count" field.
func FailedCountGT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldFailedCount, v))
}

// FailedCountGTE applies the GTE predicate on the "failed_count" field.
func FailedCountGTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldFailedCount, v))
}

// FailedCountLT applies the LT predicate on the "failed_count" field.
func FailedCountLT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldFailedCount, v))
}

// FailedCountLTE applies the LTE predicate on the "failed_count" field.
func FailedCountLTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldFailedCount, v))
}

// FailedCountIsNil applies the IsNil predicate on the "failed_count" field.
func FailedCountIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldFailedCount))
}

// FailedCountNotNil applies the NotNil predicate on the "failed_count" field.
func FailedCountNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldFailedCount))
}

// SkippedCountEQ applies the EQ predicate on the "skipped_count" field.
func SkippedCountEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldSkippedCount, v))
}

// SkippedCountNEQ applies the NEQ predicate on the "skipped_count" field.
func SkippedCountNEQ(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldSkippedCount, v))
}

// SkippedCountIn applies the In predicate on the "skipped_count" field.
func SkippedCountIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldSkippedCount, vs...))
}

// SkippedCountNotIn applies the NotIn predicate on the "skipped_count" field.
func SkippedCountNotIn(vs ...int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldSkippedCount, vs...))
}

// SkippedCountGT applies the GT predicate on the "skipped_count" field.
func SkippedCountGT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldSkippedCount, v))
}

// SkippedCountGTE applies the GTE predicate on the "skipped_count" field.
func SkippedCountGTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldSkippedCount, v))
}

// SkippedCountLT applies the LT predicate on the "skipped_count" field.
func SkippedCountLT(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldSkippedCount, v))
}

// SkippedCountLTE applies the LTE predicate on the "skipped_count" field.
func SkippedCountLTE(v int64) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldSkippedCount, v))
}

// SkippedCountIsNil applies the IsNil predicate on the "skipped_count" field.
func SkippedCountIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldSkippedCount))
}

// SkippedCountNotNil applies the NotNil predicate on the "skipped_count" field.
func SkippedCountNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldSkippedCount))
}

// JobNameEQ applies the EQ predicate on the "job_name" field.
func JobNameEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobName, v))
}

// JobNameNEQ applies the NEQ predicate on the "job_name" field.
func JobNameNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldJobName, v))
}

// JobNameIn applies the In predicate on the "job_name" field.
func JobNameIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldJobName, vs...))
}

// JobNameNotIn applies the NotIn predicate on the "job_name" field.
func JobNameNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldJobName, vs...))
}

// JobNameGT applies the GT predicate on the "job_name" field.
func JobNameGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldJobName, v))
}

// JobNameGTE applies the GTE predicate on the "job_name" field.
func JobNameGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldJobName, v))
}

// JobNameLT applies the LT predicate on the "job_name" field.
func JobNameLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldJobName, v))
}

// JobNameLTE applies the LTE predicate on the "job_name" field.
func JobNameLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldJobName, v))
}

// JobNameContains applies the Contains predicate on the "job_name" field.
func JobNameContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldJobName, v))
}

// JobNameHasPrefix applies the HasPrefix predicate on the "job_name" field.
func JobNameHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldJobName, v))
}

// JobNameHasSuffix applies the HasSuffix predicate on the "job_name" field.
func JobNameHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldJobName, v))
}

// JobNameEqualFold applies the EqualFold predicate on the "job_name" field.
func JobNameEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldJobName, v))
}

// JobNameContainsFold applies the ContainsFold predicate on the "job_name" field.
func JobNameContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldJobName, v))
}

// JobTypeEQ applies the EQ predicate on the "job_type" field.
func JobTypeEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobType, v))
}

// JobTypeNEQ applies the NEQ predicate on the "job_type" field.
func JobTypeNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldJobType, v))
}

// JobTypeIn applies the In predicate on the "job_type" field.
func JobTypeIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldJobType, vs...))
}

// JobTypeNotIn applies the NotIn predicate on the "job_type" field.
func JobTypeNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldJobType, vs...))
}

// JobTypeGT applies the GT predicate on the "job_type" field.
func JobTypeGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldJobType, v))
}

// JobTypeGTE applies the GTE predicate on the "job_type" field.
func JobTypeGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldJobType, v))
}

// JobTypeLT applies the LT predicate on the "job_type" field.
func JobTypeLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldJobType, v))
}

// JobTypeLTE applies the LTE predicate on the "job_type" field.
func JobTypeLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldJobType, v))
}

// JobTypeContains applies the Contains predicate on the "job_type" field.
func JobTypeContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldJobType, v))
}

// JobTypeHasPrefix applies the HasPrefix predicate on the "job_type" field.
func JobTypeHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldJobType, v))
}

// JobTypeHasSuffix applies the HasSuffix predicate on the "job_type" field.
func JobTypeHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldJobType, v))
}

// JobTypeEqualFold applies the EqualFold predicate on the "job_type" field.
func JobTypeEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldJobType, v))
}

// JobTypeContainsFold applies the ContainsFold predicate on the "job_type" field.
func JobTypeContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldJobType, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldState, v))
}

// JobURLEQ applies the EQ predicate on the "job_url" field.
func JobURLEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldJobURL, v))
}

// JobURLNEQ applies the NEQ predicate on the "job_url" field.
func JobURLNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldJobURL, v))
}

// JobURLIn applies the In predicate on the "job_url" field.
func JobURLIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldJobURL, vs...))
}

// JobURLNotIn applies the NotIn predicate on the "job_url" field.
func JobURLNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldJobURL, vs...))
}

// JobURLGT applies the GT predicate on the "job_url" field.
func JobURLGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldJobURL, v))
}

// JobURLGTE applies the GTE predicate on the "job_url" field.
func JobURLGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldJobURL, v))
}

// JobURLLT applies the LT predicate on the "job_url" field.
func JobURLLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldJobURL, v))
}

// JobURLLTE applies the LTE predicate on the "job_url" field.
func JobURLLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldJobURL, v))
}

// JobURLContains applies the Contains predicate on the "job_url" field.
func JobURLContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldJobURL, v))
}

// JobURLHasPrefix applies the HasPrefix predicate on the "job_url" field.
func JobURLHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldJobURL, v))
}

// JobURLHasSuffix applies the HasSuffix predicate on the "job_url" field.
func JobURLHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldJobURL, v))
}

// JobURLEqualFold applies the EqualFold predicate on the "job_url" field.
func JobURLEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldJobURL, v))
}

// JobURLContainsFold applies the ContainsFold predicate on the "job_url" field.
func JobURLContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldJobURL, v))
}

// CiFailedEQ applies the EQ predicate on the "ci_failed" field.
func CiFailedEQ(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldCiFailed, v))
}

// CiFailedNEQ applies the NEQ predicate on the "ci_failed" field.
func CiFailedNEQ(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldCiFailed, v))
}

// CiFailedIn applies the In predicate on the "ci_failed" field.
func CiFailedIn(vs ...int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldCiFailed, vs...))
}

// CiFailedNotIn applies the NotIn predicate on the "ci_failed" field.
func CiFailedNotIn(vs ...int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldCiFailed, vs...))
}

// CiFailedGT applies the GT predicate on the "ci_failed" field.
func CiFailedGT(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldCiFailed, v))
}

// CiFailedGTE applies the GTE predicate on the "ci_failed" field.
func CiFailedGTE(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldCiFailed, v))
}

// CiFailedLT applies the LT predicate on the "ci_failed" field.
func CiFailedLT(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldCiFailed, v))
}

// CiFailedLTE applies the LTE predicate on the "ci_failed" field.
func CiFailedLTE(v int16) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldCiFailed, v))
}

// ExternalServicesImpactEQ applies the EQ predicate on the "external_services_impact" field.
func ExternalServicesImpactEQ(v bool) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldExternalServicesImpact, v))
}

// ExternalServicesImpactNEQ applies the NEQ predicate on the "external_services_impact" field.
func ExternalServicesImpactNEQ(v bool) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldExternalServicesImpact, v))
}

// ExternalServicesImpactIsNil applies the IsNil predicate on the "external_services_impact" field.
func ExternalServicesImpactIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldExternalServicesImpact))
}

// ExternalServicesImpactNotNil applies the NotNil predicate on the "external_services_impact" field.
func ExternalServicesImpactNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldExternalServicesImpact))
}

// E2eFailedTestMessagesEQ applies the EQ predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesNEQ applies the NEQ predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesIn applies the In predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldE2eFailedTestMessages, vs...))
}

// E2eFailedTestMessagesNotIn applies the NotIn predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldE2eFailedTestMessages, vs...))
}

// E2eFailedTestMessagesGT applies the GT predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesGTE applies the GTE predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesLT applies the LT predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesLTE applies the LTE predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesContains applies the Contains predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesHasPrefix applies the HasPrefix predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesHasSuffix applies the HasSuffix predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesIsNil applies the IsNil predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldE2eFailedTestMessages))
}

// E2eFailedTestMessagesNotNil applies the NotNil predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldE2eFailedTestMessages))
}

// E2eFailedTestMessagesEqualFold applies the EqualFold predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldE2eFailedTestMessages, v))
}

// E2eFailedTestMessagesContainsFold applies the ContainsFold predicate on the "e2e_failed_test_messages" field.
func E2eFailedTestMessagesContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldE2eFailedTestMessages, v))
}

// SuitesXMLURLEQ applies the EQ predicate on the "suites_xml_url" field.
func SuitesXMLURLEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldSuitesXMLURL, v))
}

// SuitesXMLURLNEQ applies the NEQ predicate on the "suites_xml_url" field.
func SuitesXMLURLNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldSuitesXMLURL, v))
}

// SuitesXMLURLIn applies the In predicate on the "suites_xml_url" field.
func SuitesXMLURLIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldSuitesXMLURL, vs...))
}

// SuitesXMLURLNotIn applies the NotIn predicate on the "suites_xml_url" field.
func SuitesXMLURLNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldSuitesXMLURL, vs...))
}

// SuitesXMLURLGT applies the GT predicate on the "suites_xml_url" field.
func SuitesXMLURLGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldSuitesXMLURL, v))
}

// SuitesXMLURLGTE applies the GTE predicate on the "suites_xml_url" field.
func SuitesXMLURLGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldSuitesXMLURL, v))
}

// SuitesXMLURLLT applies the LT predicate on the "suites_xml_url" field.
func SuitesXMLURLLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldSuitesXMLURL, v))
}

// SuitesXMLURLLTE applies the LTE predicate on the "suites_xml_url" field.
func SuitesXMLURLLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldSuitesXMLURL, v))
}

// SuitesXMLURLContains applies the Contains predicate on the "suites_xml_url" field.
func SuitesXMLURLContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldSuitesXMLURL, v))
}

// SuitesXMLURLHasPrefix applies the HasPrefix predicate on the "suites_xml_url" field.
func SuitesXMLURLHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldSuitesXMLURL, v))
}

// SuitesXMLURLHasSuffix applies the HasSuffix predicate on the "suites_xml_url" field.
func SuitesXMLURLHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldSuitesXMLURL, v))
}

// SuitesXMLURLIsNil applies the IsNil predicate on the "suites_xml_url" field.
func SuitesXMLURLIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldSuitesXMLURL))
}

// SuitesXMLURLNotNil applies the NotNil predicate on the "suites_xml_url" field.
func SuitesXMLURLNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldSuitesXMLURL))
}

// SuitesXMLURLEqualFold applies the EqualFold predicate on the "suites_xml_url" field.
func SuitesXMLURLEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldSuitesXMLURL, v))
}

// SuitesXMLURLContainsFold applies the ContainsFold predicate on the "suites_xml_url" field.
func SuitesXMLURLContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldSuitesXMLURL, v))
}

// BuildErrorLogsEQ applies the EQ predicate on the "build_error_logs" field.
func BuildErrorLogsEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEQ(FieldBuildErrorLogs, v))
}

// BuildErrorLogsNEQ applies the NEQ predicate on the "build_error_logs" field.
func BuildErrorLogsNEQ(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNEQ(FieldBuildErrorLogs, v))
}

// BuildErrorLogsIn applies the In predicate on the "build_error_logs" field.
func BuildErrorLogsIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIn(FieldBuildErrorLogs, vs...))
}

// BuildErrorLogsNotIn applies the NotIn predicate on the "build_error_logs" field.
func BuildErrorLogsNotIn(vs ...string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotIn(FieldBuildErrorLogs, vs...))
}

// BuildErrorLogsGT applies the GT predicate on the "build_error_logs" field.
func BuildErrorLogsGT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGT(FieldBuildErrorLogs, v))
}

// BuildErrorLogsGTE applies the GTE predicate on the "build_error_logs" field.
func BuildErrorLogsGTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldGTE(FieldBuildErrorLogs, v))
}

// BuildErrorLogsLT applies the LT predicate on the "build_error_logs" field.
func BuildErrorLogsLT(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLT(FieldBuildErrorLogs, v))
}

// BuildErrorLogsLTE applies the LTE predicate on the "build_error_logs" field.
func BuildErrorLogsLTE(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldLTE(FieldBuildErrorLogs, v))
}

// BuildErrorLogsContains applies the Contains predicate on the "build_error_logs" field.
func BuildErrorLogsContains(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContains(FieldBuildErrorLogs, v))
}

// BuildErrorLogsHasPrefix applies the HasPrefix predicate on the "build_error_logs" field.
func BuildErrorLogsHasPrefix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasPrefix(FieldBuildErrorLogs, v))
}

// BuildErrorLogsHasSuffix applies the HasSuffix predicate on the "build_error_logs" field.
func BuildErrorLogsHasSuffix(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldHasSuffix(FieldBuildErrorLogs, v))
}

// BuildErrorLogsIsNil applies the IsNil predicate on the "build_error_logs" field.
func BuildErrorLogsIsNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldIsNull(FieldBuildErrorLogs))
}

// BuildErrorLogsNotNil applies the NotNil predicate on the "build_error_logs" field.
func BuildErrorLogsNotNil() predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldNotNull(FieldBuildErrorLogs))
}

// BuildErrorLogsEqualFold applies the EqualFold predicate on the "build_error_logs" field.
func BuildErrorLogsEqualFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldEqualFold(FieldBuildErrorLogs, v))
}

// BuildErrorLogsContainsFold applies the ContainsFold predicate on the "build_error_logs" field.
func BuildErrorLogsContainsFold(v string) predicate.ProwJobs {
	return predicate.ProwJobs(sql.FieldContainsFold(FieldBuildErrorLogs, v))
}

// HasProwJobs applies the HasEdge predicate on the "prow_jobs" edge.
func HasProwJobs() predicate.ProwJobs {
	return predicate.ProwJobs(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProwJobsTable, ProwJobsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProwJobsWith applies the HasEdge predicate on the "prow_jobs" edge with a given conditions (other predicates).
func HasProwJobsWith(preds ...predicate.Repository) predicate.ProwJobs {
	return predicate.ProwJobs(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(ProwJobsInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProwJobsTable, ProwJobsColumn),
		)
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProwJobs) predicate.ProwJobs {
	return predicate.ProwJobs(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProwJobs) predicate.ProwJobs {
	return predicate.ProwJobs(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProwJobs) predicate.ProwJobs {
	return predicate.ProwJobs(func(s *sql.Selector) {
		p(s.Not())
	})
}
