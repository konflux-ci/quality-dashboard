// Code generated by ent, DO NOT EDIT.

package bugs

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the bugs type in the database.
	Label = "bugs"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldJiraKey holds the string denoting the jira_key field in the database.
	FieldJiraKey = "jira_key"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldResolvedAt holds the string denoting the resolved_at field in the database.
	FieldResolvedAt = "resolved_at"
	// FieldResolved holds the string denoting the resolved field in the database.
	FieldResolved = "resolved"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldResolutionTime holds the string denoting the resolution_time field in the database.
	FieldResolutionTime = "resolution_time"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSummary holds the string denoting the summary field in the database.
	FieldSummary = "summary"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldProjectKey holds the string denoting the project_key field in the database.
	FieldProjectKey = "project_key"
	// EdgeBugs holds the string denoting the bugs edge name in mutations.
	EdgeBugs = "bugs"
	// TeamsFieldID holds the string denoting the ID field of the Teams.
	TeamsFieldID = "team_id"
	// Table holds the table name of the bugs in the database.
	Table = "bugs"
	// BugsTable is the table that holds the bugs relation/edge.
	BugsTable = "bugs"
	// BugsInverseTable is the table name for the Teams entity.
	// It exists in this package in order to avoid circular dependency with the "teams" package.
	BugsInverseTable = "teams"
	// BugsColumn is the table column denoting the bugs relation/edge.
	BugsColumn = "teams_bugs"
)

// Columns holds all SQL columns for bugs fields.
var Columns = []string{
	FieldID,
	FieldJiraKey,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldResolvedAt,
	FieldResolved,
	FieldPriority,
	FieldResolutionTime,
	FieldStatus,
	FieldSummary,
	FieldURL,
	FieldProjectKey,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "bugs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"teams_bugs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// JiraKeyValidator is a validator for the "jira_key" field. It is called by the builders before save.
	JiraKeyValidator func(string) error
	// DefaultResolved holds the default value on creation for the "resolved" field.
	DefaultResolved bool
	// DefaultResolutionTime holds the default value on creation for the "resolution_time" field.
	DefaultResolutionTime float64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
