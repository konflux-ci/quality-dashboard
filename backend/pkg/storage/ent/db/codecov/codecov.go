// Code generated by ent, DO NOT EDIT.

package codecov

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the codecov type in the database.
	Label = "code_cov"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRepositoryName holds the string denoting the repository_name field in the database.
	FieldRepositoryName = "repository_name"
	// FieldGitOrganization holds the string denoting the git_organization field in the database.
	FieldGitOrganization = "git_organization"
	// FieldCoveragePercentage holds the string denoting the coverage_percentage field in the database.
	FieldCoveragePercentage = "coverage_percentage"
	// FieldAverageRetests holds the string denoting the average_retests field in the database.
	FieldAverageRetests = "average_retests"
	// FieldAverageRetestsToMerge holds the string denoting the average_retests_to_merge field in the database.
	FieldAverageRetestsToMerge = "average_retests_to_merge"
	// FieldCoverageTrend holds the string denoting the coverage_trend field in the database.
	FieldCoverageTrend = "coverage_trend"
	// EdgeCodecov holds the string denoting the codecov edge name in mutations.
	EdgeCodecov = "codecov"
	// Table holds the table name of the codecov in the database.
	Table = "code_covs"
	// CodecovTable is the table that holds the codecov relation/edge.
	CodecovTable = "code_covs"
	// CodecovInverseTable is the table name for the Repository entity.
	// It exists in this package in order to avoid circular dependency with the "repository" package.
	CodecovInverseTable = "repositories"
	// CodecovColumn is the table column denoting the codecov relation/edge.
	CodecovColumn = "repository_codecov"
)

// Columns holds all SQL columns for codecov fields.
var Columns = []string{
	FieldID,
	FieldRepositoryName,
	FieldGitOrganization,
	FieldCoveragePercentage,
	FieldAverageRetests,
	FieldAverageRetestsToMerge,
	FieldCoverageTrend,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "code_covs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"repository_codecov",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// RepositoryNameValidator is a validator for the "repository_name" field. It is called by the builders before save.
	RepositoryNameValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
